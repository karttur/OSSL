{
  "verbose": 1,
  "id": "Sweden_LUCAS_460-1050_10_20230808",
  "name": "Sweden_LUCAS_460-1050_10",
  "userId": "thomasg",
  "importVersion": "OSSL-202308",
  "campaign": {
    "campaignId": "OSSL-LUCAS-SE",
    "campaignShortId": "OSSL-LUCAS-SE",
    "campaignType": "laboratory",
    "theme": "soil",
    "product": "diffuse reflectance",
    "units": "fraction",
    "geoRegion": "Sweden"
  },
  "input": {
    "jsonSpectraDataFilePath": "/Users/thomasgumbricht/docs-local/OSSL/Sweden/LUCAS/arranged-data/visnir/data-visnir_LUCAS_460-1050_10.json",
    "jsonSpectraParamsFilePath": "/Users/thomasgumbricht/docs-local/OSSL/Sweden/LUCAS/arranged-data/visnir/params-visnir_LUCAS_460-1050_10.json",
    "hyperParameterRandomTuning": "/Users/thomasgumbricht/docs-local/OSSL/Sweden/LUCAS/arranged-data/json-ml-modeling/hyper-param-random-tuning-ossl-spectra_sweden-LUCAS_nir_460-1050_10.json",
    "hyperParameterExhaustiveTuning": "/Users/thomasgumbricht/docs-local/OSSL/Sweden/LUCAS/arranged-data/json-ml-modeling/hyper-param-exhaustive-tuning-ossl-spectra_sweden-LUCAS_nir_460-1050_10.json"
  },
  "targetFeatures": [
    "cec_usda.a723_cmolc.kg",
    "oc_usda.c729_w.pct"
  ],
  "targetFeatureSymbols": {
    "caco3_usda.a54_w.pct": {
      "color": "orange",
      "size": 50
    },
    "cec_usda.a723_cmolc.kg": {
      "color": "red",
      "size": 50
    },
    "cf_usda.c236_w.pct": {
      "color": "blue",
      "size": 50
    }
  },
  "derivatives": {
    "apply": false,
    "join": false
  },
  "removeOutliers": {
    "comment": "removes sample outliers based on spectra only - globally applied as preprocess",
    "apply": true,
    "detectorMethodList": [
      "iforest (isolationforest)",
      "ee (eenvelope,ellipticenvelope)",
      "lof (lofactor,localoutlierfactor)",
      "1csvm (1c-svm, oneclasssvm)"
    ],
    "detector": "1csvm",
    "contamination": 0.1
  },
  "manualFeatureSelection": {
    "comment": "Manual feature selection overrides other selection alternatives",
    "apply": false,
    "spectra": [
      [
        "675",
        "685",
        "705",
        "715",
        "735"
      ]
    ],
    "derivatives": {
      "firstWaveLength": [
        "675"
      ],
      "lastWaveLength": [
        "735"
      ]
    }
  },
  "globalFeatureSelection": {
    "comment": [
      "removes spectra with variance below given thresholds - globally applied as preprocess"
    ],
    "apply": false,
    "varianceThreshold": {
      "threshold": 0.025
    }
  },
  "modelFeatureSelection": {
    "comment": [
      "feature selection using model data"
    ],
    "apply": false,
    "univariateSelection": {
      "apply": false,
      "SelectKBest": {
        "apply": false,
        "n_features": 5
      },
      "SelectPercentile": {
        "implemented": false,
        "apply": false,
        "percentile": 10
      },
      "genericUnivariateSelect": {
        "implemented": false,
        "apply": false,
        "hyperParameters": {}
      }
    },
    "RFE": {
      "apply": true,
      "CV": true,
      "n_features_to_select": 5,
      "step": 1
    }
  },
  "featureAgglomeration": {
    "apply": false,
    "agglomerativeClustering": {
      "apply": false,
      "implemented": false
    },
    "wardClustering": {
      "apply": false,
      "n_cluster": 0,
      "affinity": "euclidean",
      "tuneWardClustering": {
        "apply": false,
        "kfolds": 3,
        "clusters": [
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12
        ]
      }
    }
  },
  "hyperParameterTuning": {
    "apply": true,
    "fraction": 0.5,
    "nIterSearch": 6,
    "n_top": 3,
    "randomTuning": {
      "apply": true
    },
    "exhaustiveTuning": {
      "apply": false
    }
  },
  "featureImportance": {
    "apply": false,
    "reportMaxFeatures": 12,
    "permutationRepeats": 10
  },
  "modelling": {
    "apply": true
  },
  "regressionModels": {
    "OLS": {
      "apply": false,
      "hyperParams": {
        "fit_intercept": false
      }
    },
    "TheilSen": {
      "apply": false,
      "hyperParams": {}
    },
    "Huber": {
      "apply": false,
      "hyperParams": {}
    },
    "KnnRegr": {
      "apply": false,
      "hyperParams": {}
    },
    "DecTreeRegr": {
      "apply": false,
      "hyperParams": {}
    },
    "SVR": {
      "apply": false,
      "hyperParams": {
        "kernel": "linear",
        "C": 1.5,
        "epsilon": 0.05
      }
    },
    "RandForRegr": {
      "apply": true,
      "hyperParams": {
        "n_estimators": 30
      }
    },
    "MLP": {
      "apply": false,
      "hyperParams": {
        "hidden_layer_sizes": [
          100,
          100
        ],
        "max_iter": 200,
        "tol": 0.001,
        "epsilon": 1e-8
      }
    }
  },
  "modelTests": {
    "trainTest": {
      "apply": true,
      "testSize": 0.3,
      "plot": true,
      "marker": "s"
    },
    "Kfold": {
      "apply": false,
      "folds": 10,
      "plot": true,
      "marker": "."
    }
  },
  "plot": {
    "apply": true,
    "subPlots": {
      "singles": {
        "apply": true,
        "regressor": false,
        "targetFeature": false,
        "hyperParameters": false,
        "modelTests": false
      },
      "rows": {
        "apply": true,
        "regressor": false,
        "targetFeature": false,
        "hyperParameters": false,
        "modelTests": false
      },
      "columns": {
        "apply": true,
        "regressor": false,
        "targetFeature": false,
        "hyperParameters": false,
        "modelTests": false
      },
      "doubles": {
        "apply": true,
        "columns": "regressor, targetFeature, hyperParameters or modelTest",
        "rows": "regressor, targetFeature, hyperParameters or modelTest"
      }
    },
    "figSize": {
      "x": 0,
      "y": 0
    },
    "legend": false,
    "tightLayout": false,
    "scatter": {
      "size": 50
    },
    "text": {
      "x": 0.6,
      "y": 0.2,
      "bandWidth": true,
      "samples": true,
      "text": ""
    }
  },
  "figure": {
    "apply": true
  }
}
